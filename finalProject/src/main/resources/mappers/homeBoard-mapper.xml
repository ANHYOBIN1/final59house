<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="homeBoardMapper">
  <resultMap type="HomeBoard" id="homeBoardResult">
      <result column ="board_no" property="boardNo"/>
      <result column ="mem_id" property="memId"/>
      <result column ="board_mainimg_origin" property="boardMainimgOrigin"/>
      <result column ="board_mainimg_change" property="boardMainimgChange"/>
      <result column ="board_title" property="boardTitle"/>
      <result column ="board_date" property="boardDate"/>
      <result column ="board_img_origin" property="boardImgOrigin"/>
      <result column ="board_img_change" property="boardImgChange"/>
      <result column ="board_content" property="boardContent"/>
      <result column ="board_count" property="boardCount"/> 
      <result column ="board_like" property="boardLike"/> 
      <result column ="home_option" property="homeOption"/> 
      <result column ="home_familyv" property="homeFamilyv"/> 
      <result column ="status" property="status"/>   
      <result column ="mem_email" property="memEmail"/>
      <result column ="mem_nick" property="memNick"/>
      <result column ="mem_addr" property="memAddr"/>
  </resultMap> 
  
  <resultMap type="HomeReply" id="homeReplyResult">
    <result column="home_reply_no" property="homeReplyNo" />
    <result column="ref_bno" property="refBno" /> 
    <result column="mem_id" property="memId" />
    <result column="home_reply_content" property="homeReplyContent" /> 
    <result column="home_reply_date" property="homeReplyDate" /> 
    <result column="home_reply_like" property="homeReplyLike" /> 
    <result column="status" property="status" /> 
    <result column ="mem_email" property="memEmail"/>
    <result column ="mem_nick" property="memNick"/>
  </resultMap>
     <select id="selectListCount" resultType ="_int" >
       select count(*)
         from board_home
          where status = 'Y' 
  </select> 
  
    <select id="selectList" resultType="HomeBoard" resultMap="homeBoardResult">
     select board_no
       , board_title
       , board_count 
       , mem_nick 
       , board_mainimg_origin
       , board_mainimg_change
     from board_home h, member_base m
     where m.mem_email = h.mem_id and status= 'Y' 
     order by board_no desc 
  </select>  
  <update id="increaseCount"> 
        update board_home
          set board_count = board_count+1
          where board_no = #{boardNo} and status = 'Y'
  </update> 
  <select id="selectBoard"  resultType="HomeBoard" resultMap="homeBoardResult">
      select board_no
       , board_title
       , board_content
       , home_option
       , home_familyv
       , board_count 
       , to_char(board_date, 'YYYY-MM-DD') as "board_date"<!--보여졌으면 하는 형태로 입력 후 as해줘야함 갖고올때 깔끔히 보이기 위해-->
       , mem_nick
       , mem_id
       , mem_addr
       , board_mainimg_origin
       , board_mainimg_change
     from board_home h, member_base m
     where board_no = #{boardNo}   
     and m.mem_email = h.mem_id and status= 'Y' 
  </select>
  
   <select id="selectReplyList" resultMap="homeReplyResult">
   select home_reply_no
           , mem_nick
           , mem_id
		   , home_reply_content
		   , to_char(home_reply_date, 'YYYY-MM-DD') as "home_reply_date" 
      from board_home_reply1 r, member_base m
      where status = 'Y' and ref_bno=#{boardNo}
      and m.mem_email = r.mem_id
  </select>
  
  <insert id = "insertReply">
     insert into board_home_reply1(home_reply_no, home_reply_content, ref_bno, mem_id)
                  values(seq_hrno.nextval, #{homeReplyContent}, #{refBno}, #{memId})
   
  </insert> 
  
  <update id="deleteReply"> 
        update board_home_reply1 
          set status = 'N'
          where home_reply_no = #{homeReplyNo}
  </update> 
  
  <!-- 게시판 insert -->
<insert id="insertBoard"> 
	 insert into board_home(board_no, home_familyv, home_option, board_title, board_content, mem_id, board_mainimg_origin, board_mainimg_change)
				values(seq_bno.nextval, #{homeFamilyv}, #{homeOption}, #{boardTitle}, #{boardContent}, #{memId}, #{boardMainimgOrigin}, #{boardMainimgChange})
				
</insert>
  <!-- 게시판 delete -->
<update id="deleteBoard"> 
        update board_home 
          set status = 'N'
          where board_no = #{boardNo}
  </update>
  
  
</mapper>